language: c

env:
  global:
    - OBSPY_VERSION=1.0.3

sudo: false

matrix:
  include:
    - os: linux
      env: PYTHON_VERSION=2.7 CONDA_PLATFORM=linux-64 CONDA_PYSUFFIX=py27
    - os: linux
      env: PYTHON_VERSION=2.7 CONDA_PLATFORM=linux-32 CONDA_PYSUFFIX=py27 ARCHITECTURE_32BIT="True"
      addons:
        apt:
          packages:
            # https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
            - libstdc++6:i386
            - gcc-multilib
    - os: osx
      env: PYTHON_VERSION=2.7 CONDA_PLATFORM=osx-64 CONDA_PYSUFFIX=py27

    - os: linux
      env: PYTHON_VERSION=3.5 CONDA_PLATFORM=linux-64 CONDA_PYSUFFIX=py35
    - os: linux
      env: PYTHON_VERSION=3.5 CONDA_PLATFORM=linux-32 CONDA_PYSUFFIX=py35 ARCHITECTURE_32BIT="True"
      addons:
        apt:
          packages:
            # https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
            - libstdc++6:i386
            - gcc-multilib
    - os: osx
      env: PYTHON_VERSION=3.5 CONDA_PLATFORM=osx-64 CONDA_PYSUFFIX=py35

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export OS="MacOSX";
    else
      export OS="Linux";
    fi
  - |
      if [[ "$ARCHITECTURE_32BIT" == "True" ]]; then
        export ARCH=""
      else
        export ARCH="_64"
      fi
  - if [[ "$PYTHON_VERSION" == "2.7" ]]; then
    export MINICONDA="Miniconda2-latest";
    elif [[ "$PYTHON_VERSION" == "3.5" ]]; then
      export MINICONDA="Miniconda3-3.5.5";
    else
      export MINICONDA="";
    fi
  - wget https://repo.continuum.io/miniconda/${MINICONDA}-${OS}-x86${ARCH}.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda config --add channels conda-forge
  - conda config --add channels conda-forge
  - |
      if [[ "$ARCHITECTURE_32BIT" == "True" ]]; then
      conda config --add channels obspy
      fi
  - conda create -q -n test python=$PYTHON_VERSION
  - source activate test
  # Useful for debugging any issues with conda
  - conda info -a
  - |
      if [[ "$ARCHITECTURE_32BIT" == "True" ]]; then
        # linux32 doesnt have basemap-data-hires
        conda install obspy==${OBSPY_VERSION} ipython jupyter basemap nomkl sqlalchemy gdal
      elif [[ "$OS" == "Linux" ]]; then
        # only linux64 has geographiclib
        conda install obspy==${OBSPY_VERSION} ipython jupyter basemap nomkl sqlalchemy gdal basemap-data-hires geographiclib
      else
        conda install obspy==${OBSPY_VERSION} ipython jupyter basemap nomkl sqlalchemy gdal basemap-data-hires
      fi
  # list package versions
  - conda env export
  - conda list --explicit

script:
  # We change directories to make sure that python won't find the copy
  # of obspy in the source directory, see
  # https://github.com/numpy/numpy/blob/master/.travis.yml#L44
  - mkdir empty
  - cd empty
  - python -m obspy.scripts.runtests --no-flake8 -n anaconda-installers -r

notifications:
    email: false
